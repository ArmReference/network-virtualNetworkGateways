{
 "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
 "contentVersion": "1.0.0.0",
 "parameters": {
  "StorageAccountName": {
   "type": "string",
   "metadata": {
    "description": "The name of the Azure Storage Account where the templates are stored."
   }
  },
  "ContainerName": {
   "type": "string",
   "metadata": {
    "description": "The Container inside the Storage Account."
   }
  },
  "SasToken": {
   "type": "string",
   "metadata": {
    "description": "The Shared Access Signature for the Storage Account."
   }
  }
 },
 "variables": {
  "Provider": "/Microsoft.Network/virtualNetworkGateways",
  "Resource": "/reference",
  "templateUri": "[concat('https://',parameters('StorageAccountName'),'.blob.core.windows.net/',parameters('ContainerName'),variables('Provider'),variables('Resource'))]"
 },
 "resources": [
  {
   "name": "BuildVirtualNetworkGatewaySku",
   "type": "Microsoft.Resources/deployments",
   "apiVersion": "2016-09-01",
   "dependsOn": [],
   "properties": {
    "mode": "Incremental",
    "templateLink": {
     "uri": "[concat(variables('templateUri'), '/virtualNetworkGatewaySku.json', parameters('SasToken'))]",
     "contentVersion": "1.0.0.0"
    },
    "parameters": {
     "name": {
      "value": "VpnGw1"
     },
     "tier": {
      "value": "VpnGw1"
     }
    }
   }
  },
  {
   "name": "BuildPublicIp",
   "type": "Microsoft.Resources/deployments",
   "apiVersion": "2016-09-01",
   "dependsOn": [],
   "properties": {
    "mode": "Incremental",
    "templateLink": {
     "uri": "[concat(variables('templateUri'), '/subresource.json', parameters('SasToken'))]",
     "contentVersion": "1.0.0.0"
    },
    "parameters": {
     "id": {
      "value": "/subscriptions/3c22907e-eb72-46ba-8e71-2ed329c8394d/resourceGroups/Testing/providers/Microsoft.Network/publicIPAddresses/myPip"
     }
    }
   }
  },
  {
   "name": "BuildSubnet",
   "type": "Microsoft.Resources/deployments",
   "apiVersion": "2016-09-01",
   "dependsOn": [],
   "properties": {
    "mode": "Incremental",
    "templateLink": {
     "uri": "[concat(variables('templateUri'), '/subresource.json', parameters('SasToken'))]",
     "contentVersion": "1.0.0.0"
    },
    "parameters": {
     "id": {
      "value": "/subscriptions/3c22907e-eb72-46ba-8e71-2ed329c8394d/resourceGroups/Testing/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/default"
     }
    }
   }
  },
  {
   "name": "BuildLocalNetworkGateway",
   "type": "Microsoft.Resources/deployments",
   "apiVersion": "2016-09-01",
   "dependsOn": [],
   "properties": {
    "mode": "Incremental",
    "templateLink": {
     "uri": "[concat(variables('templateUri'), '/subresource.json', parameters('SasToken'))]",
     "contentVersion": "1.0.0.0"
    },
    "parameters": {
     "id": {
      "value": "/subscriptions/3c22907e-eb72-46ba-8e71-2ed329c8394d/resourceGroups/Testing/providers/Microsoft.Network/localNetworkGateways/myLng"
     }
    }
   }
  },
  {
   "name": "BuildVirtualNetworkGatewayIpConfigurations",
   "type": "Microsoft.Resources/deployments",
   "apiVersion": "2016-09-01",
   "dependsOn": [
    "[concat('Microsoft.Resources/deployments/', 'BuildPublicIp')]",
    "[concat('Microsoft.Resources/deployments/', 'BuildSubnet')]",
    "[concat('Microsoft.Resources/deployments/', 'BuildLocalNetworkGateway')]"
   ],
   "properties": {
    "mode": "Incremental",
    "templateLink": {
     "uri": "[concat(variables('templateUri'), '/virtualnetworkgatewayipconfiguration.json', parameters('SasToken'))]",
     "contentVersion": "1.0.0.0"
    },
    "parameters": {
     "name": {
      "value": "ipconfig1"
     },
     "privateIPAllocationMethod": {
      "value": "Dynamic"
     },
     "publicIPAddress": {
      "value": "[reference('BuildPublicIp').outputs.SubResource.value]"
     },
     "subnet": {
      "value": "[reference('BuildSubnet').outputs.SubResource.value]"
     }
    }
   }
  },
  {
   "name": "BuildProperties",
   "type": "Microsoft.Resources/deployments",
   "apiVersion": "2016-09-01",
   "dependsOn": [
    "[concat('Microsoft.Resources/deployments/','BuildVirtualNetworkGatewaySku')]"
   ],
   "properties": {
    "mode": "Incremental",
    "templateLink": {
     "uri": "[concat(variables('templateUri'), '/properties.json', parameters('SasToken'))]",
     "contentVersion": "1.0.0.0"
    },
    "parameters": {
     "gatewayType": {
      "value": "Vpn"
     },
     "vpnType": {
      "value": "RouteBased"
     },
     "ipConfigurations": {
      "value": "[createArray(reference('BuildVirtualNetworkGatewayIpConfigurations').outputs.VirtualNetworkGatewayIPConfiguration.value)]"
     },
     "sku": {
      "value": "[reference('BuildVirtualNetworkGatewaySku').outputs.virtualNetworkGatewaySku.value]"
     },
     "gatewayDefaultSite": {
      "value": "[reference('BuildLocalNetworkGateway').outputs.SubResource.value]"
     }
    }
   }
  },
  {
   "name": "BuildVirtualNetworkGateway",
   "type": "Microsoft.Resources/deployments",
   "apiVersion": "2016-09-01",
   "dependsOn": [
    "[concat('Microsoft.Resources/deployments/','BuildVirtualNetworkGatewayIpConfigurations')]",
    "[concat('Microsoft.Resources/deployments/','BuildVirtualNetworkGatewaySku')]",
    "[concat('Microsoft.Resources/deployments/', 'BuildProperties')]"
   ],
   "properties": {
    "mode": "Incremental",
    "templateLink": {
     "uri": "[concat(variables('templateUri'), '/virtualNetworkGateways.json', parameters('SasToken'))]",
     "contentVersion": "1.0.0.0"
    },
    "parameters": {
     "name": {
      "value": "VnetGW"
     },
     "properties": {
      "value": "[reference('BuildProperties').outputs.Properties.value]"
     },
     "tags": {
      "value": "[json('{\"TagName\": \"TagValue\"}')]"
     }
    }
   }
  }
 ],
 "outputs": {
  "armTemplate": {
   "type": "object",
   "value": {
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {},
    "resources": [
     "[reference('BuildVirtualNetworkGateway').outputs.virtualNetworkGateway.value]"
    ],
    "outputs": {}
   },
   "metadata": {
    "description": "Fully populated template"
   }
  }
 }
}